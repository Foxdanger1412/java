package test;
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

interface ILinkedList {

public void addToIndex(int index, Object element);
public void add(Object element);
public Object get(int index);
public void set(int index, Object element);
public void clear();
public boolean isEmpty();
public void remove(int index);
public int size();
public ILinkedList sublist(int fromIndex, int toIndex);
public boolean contains(Object o);
    
}


public class test implements ILinkedList {
	/* Implement your linked list class here*/
    
    class Node{
        int data;
        Node prev;
        Node next;
        
        public Node(int data){
            this.data = data;
        }
    }
    
    public void printDLL(test myList){
        Node temp = head;
        if(head == null){
            System.out.println("[]");
            return;
        }
        else{
            System.out.print("[");
            while(temp != null){
            System.out.print(temp.data+", ");
            temp = temp.next;
            }
            System.out.print("]");
        }
    }
    
    
    Node head, tail = null;
    void add(int data){
        Node newNode = new Node(data);
        if(head == null){
            head = tail = newNode;
            head.prev = null;
            tail.next = null;
        }
        else{
            tail.next = newNode;
            newNode.prev = tail;
            tail = newNode;
            tail.next = null;
        }
    }
    
    public static void main(String[] args) {
        /* Enter your code here. Read input from STDIN. Print output to STDOUT */
        // taking the list 
        Scanner sc = new Scanner(System.in);
        String sin = sc.nextLine().replaceAll("\\[|\\]", "");
        String[] s = sin.split(", ");
        
        test ddl = new test();
        if(s.length==1 & s[0].isEmpty()){
            ddl = new test();
        }
        else{
            for(int k=0; k<s.length; k++)
                ddl.add(Integer.parseInt(s[k]));
        }
        
        String fun = sc.nextLine();
        switch(fun){
            case "add":
                int element;
                element = Integer.parseInt(sc.nextLine());
                ddl.add(element);
                ddl.printDLL(ddl);
            break;
            
            case "addToIndex":
                
                
                
        }
        
        
        
        
        
    }
}